import { createEntity } from '../../../src/database/middleware';
import { ADMIN_USER, testContext } from '../../utils/testQuery';
import { ENTITY_TYPE_MALWARE } from '../../../src/schema/stixDomainObject';

export const exploitInput = {
  name: 'exploit-test_exploit-fixture',
  description: '',
  published_date: new Date('2023-01-16T15:54:59.194Z'),
};

export const threatActorInput = {
  name: 'exploit-test_threat-actor-fixture',
  description: '',
  threat_actor_type: [],
  confidence: 75,
  objectMarking: [],
  objectLabel: [],
  externalReferences: []
};

export const vulnerabilityInput = {
  name: 'exploit-test_vulnerability-fixture',
  description: '',
  x_opencti_base_score: 1,
  x_opencti_base_severity: '',
  x_opencti_attack_vector: '',
  confidence: 75,
  objectMarking: [],
  objectLabel: [],
  externalReferences: []
};

export const attackPatternInput = {
  name: 'exploit-test_attack-pattern-fixture',
  description: '',
  x_mitre_id: '',
  objectLabel: [],
  objectMarking: [],
  killChainPhases: [],
  externalReferences: []
};

export const intrusionSetInput = {
  name: 'exploit-test_intrusion-set-fixture',
  description: ''
};

export const campaignInput = {
  name: 'exploit-test_campaign-fixture',
  description: '',
  confidence: 75,
  objectMarking: [],
  objectLabel: [],
  externalReferences: []
};

export const markingInput = {
  definition_type: 'TLP',
  definition: 'TLP:NOT_CLEAR',
  x_opencti_color: '#000000',
  x_opencti_order: 1,
};

export async function createMalwareWithName(malwareName: string) {
  return createEntity(
    testContext,
    ADMIN_USER,
    {
      name: malwareName,
      description: '',
      malware_types: [],
      is_family: false,
      architecture_execution_envs: [],
      implementation_languages: [],
      confidence: 75,
      objectMarking: [],
      objectLabel: [],
      externalReferences: []
    },
    ENTITY_TYPE_MALWARE
  );
}
