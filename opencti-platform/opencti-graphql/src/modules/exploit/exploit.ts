import exploitSchema from './exploit.graphql';
import { ModuleDefinition, registerDefinition } from '../../schema/module';
import type { StoreEntity } from '../../types/store';
import type { StixObject } from '../../types/stix-common';
import { ABSTRACT_STIX_DOMAIN_OBJECT } from '../../schema/general';
import { NAME_FIELD, normalizeName } from '../../schema/identifier';
import { exploitResolvers } from './exploit-resolvers';
import { ENTITY_TYPE_EXPLOIT, StixExploit } from './exploit-types';
import { convertExploitToStix } from './exploit-converter';

const EXPLOIT_DEFINITION: ModuleDefinition<StoreEntity, StixObject> = {
  attributes: [
    { name: 'name', type: 'string', mandatoryType: 'external', multiple: false, upsert: true }
  ],
  converter: convertExploitToStix,
  graphql: {
    resolver: exploitResolvers,
    schema: exploitSchema
  },
  identifier: {
    definition: {
      [ENTITY_TYPE_EXPLOIT]: [{ src: NAME_FIELD }]
    }
  },
  relations: [],
  representative: (stix: StixExploit) => {
    return stix.name;
  },
  resolvers: {
    name(data: object) {
      return normalizeName(data);
    }
  },
  type: {
    id: 'exploits',
    name: ENTITY_TYPE_EXPLOIT,
    category: ABSTRACT_STIX_DOMAIN_OBJECT
  }
};

registerDefinition(EXPLOIT_DEFINITION);
